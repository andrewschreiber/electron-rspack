"use strict";(self.webpackChunkelectron_rspack_website=self.webpackChunkelectron_rspack_website||[]).push([["6211"],{4997:function(e,n,s){s.r(n),s.d(n,{default:function(){return r}});var t=s(651),i=s(6971);function c(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",p:"p",h2:"h2",pre:"pre"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"outputmanifest",children:["output.manifest",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#outputmanifest",children:"#"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"类型："})," ",(0,t.jsx)(n.code,{children:"string | boolean"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"默认值："})," ",(0,t.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["是否生成 manifest 文件，该文件包含所有构建产物的信息、以及",(0,t.jsx)(n.a,{href:"/config/source/entry",children:"入口模块"}),"与构建产物间的映射关系。"]}),"\n",(0,t.jsxs)(n.p,{children:["当 ",(0,t.jsx)(n.code,{children:"output.manifest"})," 设置为 ",(0,t.jsx)(n.code,{children:"true"})," 时，Rsbuild 会在构建后生成一个 ",(0,t.jsx)(n.code,{children:"manifest.json"})," 文件。当 ",(0,t.jsx)(n.code,{children:"output.manifest"})," 的值是一个字符串时，它将作为 manifest 文件的名称或路径。"]}),"\n",(0,t.jsxs)(n.h2,{id:"输出内容",children:["输出内容",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#输出内容",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"manifest 文件默认输出的结构为："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type FilePath = string;\n\ntype ManifestList = {\n  entries: {\n    /** key 为 entry 名称，对应 Rsbuild 的 source.entry 配置 */\n    [entryName: string]: {\n      initial?: {\n        js?: FilePath[];\n        css?: FilePath[];\n      };\n      async?: {\n        js?: FilePath[];\n        css?: FilePath[];\n      };\n      /** 当前 entry 关联的 HTML 页面 */\n      html?: FilePath[];\n      /** 和当前 entry 相关的其他资源（如 png、svg、source map 等） */\n      assets?: FilePath[];\n    };\n  };\n  /** 铺平的所有 assets */\n  allFiles: FilePath[];\n};\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"基础示例",children:["基础示例",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基础示例",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"添加以下配置来开启："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"export default {\n  output: {\n    manifest: true,\n  },\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["当构建完成后，会自动生成 ",(0,t.jsx)(n.code,{children:"dist/manifest.json"})," 文件："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "allFiles": [\n    "/static/css/index.a11cfb11.css",\n    "/static/js/index.c586cd5e.js",\n    "/index.html",\n    "/static/js/index.c586cd5e.js.LICENSE.txt"\n  ],\n  "entries": {\n    "index": {\n      "initial": {\n        "js": ["/static/js/index.c586cd5e.js"],\n        "css": ["/static/css/index.a11cfb11.css"]\n      },\n      "assets": ["/static/js/index.c586cd5e.js.LICENSE.txt"],\n      "html": ["/index.html"]\n    }\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"设置路径",children:["设置路径",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#设置路径",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"output.manifest"})," 可以是一个相对于 ",(0,t.jsx)(n.code,{children:"dist"})," 目录的路径，比如输出为 ",(0,t.jsx)(n.code,{children:"dist/static/my-manifest.json"}),"："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"export default {\n  output: {\n    manifest: './static/my-manifest.json',\n  },\n};\n"})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}let r=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["zh%2Fconfig%2Foutput%2Fmanifest.mdx"]={toc:[{text:"输出内容",id:"输出内容",depth:2},{text:"基础示例",id:"基础示例",depth:2},{text:"设置路径",id:"设置路径",depth:2}],title:"output.manifest",frontmatter:{}}}}]);