"use strict";(self.webpackChunkelectron_rspack_website=self.webpackChunkelectron_rspack_website||[]).push([["9549"],{7647:function(n,e,r){r.r(e),r.d(e,{default:function(){return h}});var s=r(651),i=r(6971);function t(n){let e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",pre:"pre",h2:"h2",ul:"ul",li:"li",strong:"strong"},(0,i.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"environment-context",children:["Environment Context",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#environment-context",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"Environment context 是一个只读对象，提供一些和当前环境有关的上下文信息。"}),"\n",(0,s.jsxs)(e.p,{children:["在 Rsbuild 的 hooks 中，你可以通过 ",(0,s.jsx)(e.code,{children:"environment"})," 或 ",(0,s.jsx)(e.code,{children:"environments"})," 入参获取 environment context 对象。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"type EnvironmentContext = {\n  name: string;\n  browserslist: string[];\n  config: NormalizedEnvironmentConfig;\n  distPath: string;\n  entry: RsbuildEntry;\n  htmlPaths: Record<string, string>;\n  tsconfigPath?: string;\n};\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"name",children:["name",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#name",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["当前环境的唯一名称，用于区分和定位环境，对应于 ",(0,s.jsx)(e.a,{href:"/config/environments",children:"environments"})," 配置中的 key。"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"类型："})," ",(0,s.jsx)(e.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"browserslist",children:["browserslist",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#browserslist",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["项目兼容的目标浏览器范围。详情可参考 ",(0,s.jsx)(e.a,{href:"/guide/advanced/browserslist",children:"设置浏览器范围"}),"."]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"类型："})," ",(0,s.jsx)(e.code,{children:"string[]"})]}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"config",children:["config",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#config",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"归一化后当前环境的 Rsbuild 配置"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"类型："})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"type NormalizedEnvironmentConfig = DeepReadonly<{\n  dev: NormalizedDevConfig;\n  html: NormalizedHtmlConfig;\n  tools: NormalizedToolsConfig;\n  source: NormalizedSourceConfig;\n  server: NormalizedServerConfig;\n  output: NormalizedOutputConfig;\n  plugins?: RsbuildPlugins;\n  security: NormalizedSecurityConfig;\n  performance: NormalizedPerformanceConfig;\n  moduleFederation?: ModuleFederationConfig;\n}>;\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"distpath",children:["distPath",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#distpath",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["构建产物输出目录的绝对路径，对应 RsbuildConfig 中的 ",(0,s.jsx)(e.a,{href:"/config/output/dist-path",children:"output.distPath.root"})," 配置项。"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"类型："})," ",(0,s.jsx)(e.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"entry",children:["entry",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#entry",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["构建入口对象，对应 ",(0,s.jsx)(e.a,{href:"/config/source/entry",children:"source.entry"})," 选项。"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"类型："})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"type RsbuildEntry = Record<string, string | string[] | EntryDescription>;\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"htmlpaths",children:["htmlPaths",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#htmlpaths",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"HTML 产物的路径信息。该 API 会返回一个对象，对象的 key 为 entry 名称，value 为 HTML 文件在产物目录下的相对路径。"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"类型："})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"type htmlPaths = Record<string, string>;\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"tsconfigpath",children:["tsconfigPath",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigpath",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"tsconfig.json 文件的绝对路径，若项目中不存在 tsconfig.json 文件，则为 undefined。"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"类型："})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"type TsconfigPath = string | undefined;\n"})})]})}function d(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(t,{...n})}):t(n)}let h=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh%2Fapi%2Fjavascript-api%2Fenvironment-context.mdx"]={toc:[{text:"name",id:"name",depth:2},{text:"browserslist",id:"browserslist",depth:2},{text:"config",id:"config",depth:2},{text:"distPath",id:"distpath",depth:2},{text:"entry",id:"entry",depth:2},{text:"htmlPaths",id:"htmlpaths",depth:2},{text:"tsconfigPath",id:"tsconfigpath",depth:2}],title:"Environment Context",frontmatter:{}}}}]);