"use strict";(self.webpackChunkelectron_rspack_website=self.webpackChunkelectron_rspack_website||[]).push([["585"],{7546:function(e,i,t){t.r(i),t.d(i,{default:function(){return c}});var s=t(651),n=t(6971);function r(e){let i=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",p:"p",h2:"h2",pre:"pre",div:"div"},(0,n.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.h1,{id:"devwritetodisk",children:["dev.writeToDisk",(0,s.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#devwritetodisk",children:"#"})]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Type:"})," ",(0,s.jsx)(i.code,{children:"boolean | ((filename: string) => boolean)"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Default:"})," ",(0,s.jsx)(i.code,{children:"false"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Controls whether the build output from development mode is written to disk."}),"\n",(0,s.jsx)(i.p,{children:"Rsbuild by default saves the build artifacts in the memory of the dev server, thereby reducing the overhead caused by file operations."}),"\n",(0,s.jsxs)(i.h2,{id:"writing-to-disk",children:["Writing to Disk",(0,s.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#writing-to-disk",children:"#"})]}),"\n",(0,s.jsx)(i.p,{children:"You can choose to write the build output to disk, which is usually used for inspecting the content of the build output or configuring proxy rules for static assets."}),"\n",(0,s.jsxs)(i.p,{children:["Simply set the ",(0,s.jsx)(i.code,{children:"dev.writeToDisk"})," option to ",(0,s.jsx)(i.code,{children:"true"}),":"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"export default {\n  dev: {\n    writeToDisk: true,\n  },\n};\n"})}),"\n",(0,s.jsxs)(i.div,{className:"rspress-directive tip",children:[(0,s.jsx)(i.div,{className:"rspress-directive-title",children:"TIP"}),(0,s.jsx)(i.div,{className:"rspress-directive-content",children:(0,s.jsxs)(i.p,{children:["Setting ",(0,s.jsx)(i.code,{children:"writeToDisk: true"})," is used for viewing the build output from development mode. It does not change the behavior of the dev server. When accessing files through a browser, the dev server will still read the file content from memory.\n"]})})]}),"\n",(0,s.jsxs)(i.h2,{id:"matching-specific-files",children:["Matching Specific Files",(0,s.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#matching-specific-files",children:"#"})]}),"\n",(0,s.jsxs)(i.p,{children:["You can also set ",(0,s.jsx)(i.code,{children:"dev.writeToDisk"})," to a function to match only certain files. When the function returns ",(0,s.jsx)(i.code,{children:"false"}),", the file will not be written; when it returns ",(0,s.jsx)(i.code,{children:"true"}),", the file will be written to disk."]}),"\n",(0,s.jsx)(i.p,{children:"For example, to write files to disk while excluding hot-update temporary files:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"export default {\n  dev: {\n    writeToDisk: (file) => !file.includes('.hot-update.'),\n  },\n};\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,n.ah)(),e.components);return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}let c=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["en%2Fconfig%2Fdev%2Fwrite-to-disk.mdx"]={toc:[{text:"Writing to Disk",id:"writing-to-disk",depth:2},{text:"Matching Specific Files",id:"matching-specific-files",depth:2}],title:"dev.writeToDisk",frontmatter:{}}}}]);